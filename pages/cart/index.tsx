import React from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import Nav from '../../src/components/web/nav/Nav'
import Recent from '../../src/components/web/recent/Recent'
import NewsLetter from '../../src/components/web/newsLetter/NewsLetter'
import Footer from '../../src/components/web/footer/Footer'
import CartC from '../../src/components/web/cart/Cart'
import { getCart, updateCartAdd, updateCartRemove, removeFromCart, clearError, clearMessage } from '../../src/redux/features/cartSlice'
import { useAppSelector, useAppDispatch } from '../../src/redux/hooks'
import { useEffect } from 'react'
import { useAlert } from '../../src/services/AlertHook'
import Toast from '../../src/components/toast/Toast'

const Cart: NextPage = () => {
    const dispatch = useAppDispatch()
    const alert = useAlert()

    const { token } = useAppSelector((state) => state.auth)

    const { success: cartSuccess, message: cartMessage, error: cartError, loading: cartLoading, loadingUpdateCart, cartItems, loadingFetchCart } = useAppSelector(state => state.cart)

    useEffect(() => {
        dispatch(getCart(token))
    }, [dispatch, token])

    useEffect(() => {
        if (cartError) {
            setTimeout(() => {
                dispatch(clearError())
            }, 3000);
        }
        if (cartSuccess) {
            setTimeout(() => {
                dispatch(clearMessage())
                dispatch(getCart(token))
            }, 3000);
        }
    }, [cartSuccess, cartError, cartMessage, dispatch, token])

    useEffect(() => {
        if (cartSuccess) {
            setTimeout(() => {
                dispatch(getCart(token))
            }, 100);
        }
    }, [cartSuccess, dispatch, token])

    const handleUpdateCart = (data: any) => {
        dispatch(updateCartAdd(data))
    }

    const handleUpdateCartRemove = (data: any) => {
        dispatch(updateCartRemove(data))
    }

    const handleRemoveFromCart = (id: number) => {
        dispatch(removeFromCart(id))
    }

    return (
        <div>
            <Head>
                <title>Cue |  The artisan for Digital and Offline Space</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/flip-favicon.png" />
            </Head>

            <Nav />

            <div className='relative'>
                {cartSuccess && <Toast message={cartMessage} bgColor='green' />}
                {cartError && <Toast message={cartError} bgColor='red' />}
            </div>


            <section className="bg-white w-full h-full">

                <div className='container mx-auto px-4 md:px-10'>

                    <CartC
                        cartItems={cartItems}
                        cartLoading={cartLoading}
                        removeFromCart={handleRemoveFromCart}
                        updateCartAdd={handleUpdateCart}
                        loadingUpdateCart={loadingUpdateCart}
                        updateCartRemove={handleUpdateCartRemove}
                        loadingFetchCart={loadingFetchCart}
                    />

                    <Recent />


                    <NewsLetter />

                    <div className="pt-20"></div>


                </div>

            </section>

            <footer className="bg-backg w-full h-full">
                <Footer />
            </footer>

        </div>
    )
}

export default Cart
import type { NextPage } from 'next'
import Head from 'next/head'
import VrifyComponent from '../../src/components/auth/Verify'
import Alert from '../../src/components/alert/Alert'
import { verifyEmail, clearError, clearMessage } from '../../src/redux/features/authSlice'
import { useAppSelector, useAppDispatch } from '../../src/redux/hooks'
import { useEffect } from 'react'
import { useAlert } from '../../src/services/AlertHook'
import { useRouter } from 'next/router'

const Verify: NextPage = () => {
  const dispatch = useAppDispatch()
  const router = useRouter()
  const { email } = router.query

  const { loading, error, success, message } = useAppSelector((state) => state.auth)

  const alert = useAlert()

  useEffect(() => {
    if (error) {
      alert('Error', error, 'error', 'Ok', () => {
        dispatch(clearError())
      })
    }
    if (success) {
      alert('Success', message, 'success', 'Ok', () => {
        dispatch(clearMessage())
        router.push('/login')
      })
    }
  }, [loading, error, success, message, dispatch, alert, router])

  const handleVerify = (data: any) => {
    dispatch(verifyEmail(data))
  }

  return (
    <div>
      <Head>
        <title>Cue |  The artisan for Digital and Offline Space</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/flip-favicon.png" />
      </Head>

      <VrifyComponent verify={handleVerify} loading={loading}
        email={email as string}
      />

      <footer >

      </footer>
    </div>
  )
}

export default Verify
